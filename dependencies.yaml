# Dependency list for https://github.com/rapidsai/dependency-file-generator
files:
  all:
    output: conda
    matrix:
      cuda: ["11.8", "12.2"]
      arch: [x86_64]
    includes:
      - build_cpp
      - build_python
      - cuda
      - cuda_version
      - develop
      - docs
      - py_version
      - depends_on_rmm
      - depends_on_cudf
      - depends_on_cuml
      - depends_on_cupy
      - rapids_build_skbuild
      - run_python_cuspatial
      - test_libcuspatial
      - test_python_cuspatial
      - test_python_cuproj
      - notebooks
  test_cpp:
    output: none
    includes:
      - cuda_version
      - test_libcuspatial
  test_python:
    output: none
    includes:
      - cuda_version
      - py_version
      - test_python_cuspatial
      - test_python_cuproj
      - test_cuspatial
  test_notebooks:
    output: none
    includes:
      - cuda_version
      - depends_on_cuml
      - test_notebooks
      - notebooks
      - py_version
      - test_cuspatial
  checks:
    output: none
    includes:
      - develop
      - py_version
  docs:
    output: none
    includes:
      - cuda_version
      - docs
      - py_version
      - test_cuspatial
  py_build_cuspatial:
    output: [pyproject]
    pyproject_dir: python/cuspatial
    extras:
      table: build-system
    includes:
      - rapids_build_skbuild
  py_rapids_build_cuspatial:
    output: [pyproject]
    pyproject_dir: python/cuspatial
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - depends_on_rmm
      - depends_on_cudf
      - build_cpp
      - build_python
      - build_wheels
  py_run_cuspatial:
    output: [pyproject]
    pyproject_dir: python/cuspatial
    extras:
      table: project
    includes:
      - depends_on_rmm
      - depends_on_cudf
      - run_python_cuspatial
  py_test_cuspatial:
    output: [pyproject]
    pyproject_dir: python/cuspatial
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_cuspatial
  py_build_cuproj:
    output: [pyproject]
    pyproject_dir: python/cuproj
    extras:
      table: build-system
    includes:
      - rapids_build_skbuild
  py_rapids_build_cuproj:
    output: [pyproject]
    pyproject_dir: python/cuproj
    extras:
      table: tool.rapids-build-backend
      key: requires
    includes:
      - depends_on_rmm
      - build_cpp_cuproj
      - build_python
      - build_wheels
  py_run_cuproj:
    output: [pyproject]
    pyproject_dir: python/cuproj
    extras:
      table: project
    includes:
      - depends_on_rmm
      - depends_on_cupy
  py_test_cuproj:
    output: [pyproject]
    pyproject_dir: python/cuproj
    extras:
      table: project.optional-dependencies
      key: test
    includes:
      - test_python_cuproj
      - depends_on_cuspatial
      - test_cuspatial

channels:
  - rapidsai
  - rapidsai-nightly
  - conda-forge
  - nvidia
dependencies:
  build_cpp:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - ninja
          - cmake>=3.26.4
      - output_types: conda
        packages:
          - c-compiler
          - cxx-compiler
          - libcudf==24.8.*
          - librmm==24.8.*
          - proj
          - sqlite
    specific:
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - &gcc_amd64 gcc_linux-64=11.*
              - &sysroot_amd64 sysroot_linux-64==2.17
          - matrix:
              arch: aarch64
            packages:
              - &gcc_aarch64 gcc_linux-aarch64=11.*
              - &sysroot_aarch64 sysroot_linux-aarch64==2.17
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
              cuda: "11.8"
            packages:
              - nvcc_linux-64=11.8
          - matrix:
              arch: aarch64
              cuda: "11.8"
            packages:
              - nvcc_linux-aarch64=11.8
          - matrix:
              cuda: "12.*"
            packages:
              - cuda-nvcc
  build_cpp_cuproj:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - ninja
          - cmake>=3.26.4
      - output_types: conda
        packages:
          - c-compiler
          - cxx-compiler
          - librmm==24.8.*,>=0.0.0a0
          - proj
          - sqlite
    specific:
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - *gcc_amd64
              - *sysroot_amd64
          - matrix:
              arch: aarch64
            packages:
              - *gcc_aarch64
              - *sysroot_aarch64
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
              cuda: "11.8"
            packages:
              - nvcc_linux-64=11.8
          - matrix:
              arch: aarch64
              cuda: "11.8"
            packages:
              - nvcc_linux-aarch64=11.8
          - matrix:
              cuda: "12.*"
            packages:
              - cuda-nvcc
  build_python:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - cython>=3.0.0
    specific:
      - output_types: conda
        matrices:
          - matrix:
              arch: x86_64
            packages:
              - *gcc_amd64
              - *sysroot_amd64
          - matrix:
              arch: aarch64
            packages:
              - *gcc_aarch64
              - *sysroot_aarch64
  build_wheels:
    common:
      - output_types: [requirements, pyproject]
        packages:
          - wheel
  rapids_build_skbuild:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - &rapids_build_backend rapids-build-backend>=0.3.0,<0.4.0.dev0
      - output_types: conda
        packages:
          - scikit-build-core>=0.7.0
      - output_types: [requirements, pyproject]
        packages:
          - scikit-build-core[pyproject]>=0.7.0
  cuda_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "11.2"
            packages:
              - cuda-version=11.2
          - matrix:
              cuda: "11.4"
            packages:
              - cuda-version=11.4
          - matrix:
              cuda: "11.5"
            packages:
              - cuda-version=11.5
          - matrix:
              cuda: "11.8"
            packages:
              - cuda-version=11.8
          - matrix:
              cuda: "12.0"
            packages:
              - cuda-version=12.0
          - matrix:
              cuda: "12.2"
            packages:
              - cuda-version=12.2
  cuda:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              cuda: "12.*"
            packages:
              - cuda-cudart-dev
              - cuda-cupti-dev
              - cuda-nvrtc-dev
          - matrix:
              cuda: "11.*"
            packages:
              - cudatoolkit
  develop:
    common:
      - output_types: [conda, requirements]
        packages:
          - pre-commit
      - output_types: conda
        packages:
          - clang-tools=16.0.6
  docs:
    common:
      - output_types: [conda]
        packages:
          - doxygen
      - output_types: [conda, requirements]
        packages:
          - ipython
          - myst-parser
          - nbsphinx
          - numpydoc
          # https://github.com/pydata/pydata-sphinx-theme/issues/1539
          - pydata-sphinx-theme!=0.14.2
          - sphinx<6
  notebooks:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - ipython
          - ipywidgets
          - notebook
          - pydeck
          - shapely
          - scikit-image
      - output_types: [requirements, pyproject]
        packages:
          - pyproj>=3.6.0,<3.7a0
      - output_types: [conda]
        packages:
          - curl
  # TODO: Remove geopandas.dataset usage in cuspatial_api_examples.ipynb
  test_notebooks:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - geopandas<1
  py_version:
    specific:
      - output_types: conda
        matrices:
          - matrix:
              py: "3.9"
            packages:
              - python=3.9
          - matrix:
              py: "3.10"
            packages:
              - python=3.10
          - matrix:
              py: "3.11"
            packages:
              - python=3.11
          - matrix:
            packages:
              - python>=3.9,<3.12
  run_python_cuspatial:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - geopandas>=0.11.0
          - &numpy numpy>=1.23,<2.0a0
  test_python_cuspatial:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - pytest
          - pytest-cov
          - pytest-xdist
  test_python_cuproj:
    common:
      - output_types: [conda, requirements, pyproject]
        packages:
          - *numpy
          - pytest
          - pytest-cov
          - pytest-xdist
          - geopandas>=0.11.0
      - output_types: [requirements, pyproject]
        packages:
          - pyproj>=3.6.0,<3.7a0

  depends_on_rmm:
    common:
      - output_types: conda
        packages:
          - &rmm_conda rmm==24.8.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.*"}
            packages:
              - rmm-cu12==24.8.*,>=0.0.0a0
          - matrix: {cuda: "11.*"}
            packages:
              - rmm-cu11==24.8.*,>=0.0.0a0
          - {matrix: null, packages: [*rmm_conda]}

  depends_on_cudf:
    common:
      - output_types: conda
        packages:
          - &cudf_conda cudf==24.8.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.*"}
            packages:
              - cudf-cu12==24.8.*,>=0.0.0a0
          - matrix: {cuda: "11.*"}
            packages:
              - cudf-cu11==24.8.*,>=0.0.0a0
          - {matrix: null, packages: [*cudf_conda]}

  depends_on_cuml:
    common:
      - output_types: conda
        packages:
          - &cuml_conda cuml==24.8.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.*"}
            packages:
              - cuml-cu12==24.8.*,>=0.0.0a0
          - matrix: {cuda: "11.*"}
            packages:
              - cuml-cu11==24.8.*,>=0.0.0a0
          - {matrix: null, packages: [*cuml_conda]}

  depends_on_cuspatial:
    common:
      - output_types: conda
        packages:
          - &cuspatial_conda cuspatial==24.8.*,>=0.0.0a0
      - output_types: requirements
        packages:
          # pip recognizes the index as a global option for the requirements.txt file
          - --extra-index-url=https://pypi.nvidia.com
          - --extra-index-url=https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.*"}
            packages:
              - cuspatial-cu12==24.8.*,>=0.0.0a0
          - matrix: {cuda: "11.*"}
            packages:
              - cuspatial-cu11==24.8.*,>=0.0.0a0
          - {matrix: null, packages: [*cuspatial_conda]}

  depends_on_cupy:
    common:
      - output_types: conda
        packages:
          - cupy>=12.0.0
    specific:
      - output_types: [requirements, pyproject]
        matrices:
          - matrix: {cuda: "12.*"}
            packages:
              - cupy-cuda12x>=12.0.0
          - matrix: {cuda: "11.*"}
            packages:
              - &cupy_cu11 cupy-cuda11x>=12.0.0
          - {matrix: null, packages: [*cupy_cu11]}
  test_libcuspatial:
    common:
      - output_types: conda
        packages:
          - libcuspatial==24.8.*
          - libcuspatial-tests==24.8.*
  test_cuspatial:
    common:
      - output_types: conda
        packages:
          - libcuspatial==24.8.*
          - cuspatial==24.8.*
          - cuproj==24.8.*
