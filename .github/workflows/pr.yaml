name: pr

on:
  push:
    branches:
      - "pull-request/[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pr-builder:
    needs:
      - check-nightly-ci
      - changed-files
      - checks
      - conda-cpp-build
      - conda-cpp-checks
      - conda-cpp-tests
      - conda-python-build
      - conda-python-tests
      - conda-notebook-tests
      - docs-build
      - wheel-build-cuspatial
      - wheel-build-libcuspatial
      - wheel-tests-cuspatial
      - wheel-build-cuproj
      - wheel-tests-cuproj
      - devcontainer
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/pr-builder.yaml@cuda-12.8.0
    if: always()
    with:
      needs: ${{ toJSON(needs) }}
  check-nightly-ci:
    # Switch to ubuntu-latest once it defaults to a version of Ubuntu that
    # provides at least Python 3.11 (see
    # https://docs.python.org/3/library/datetime.html#datetime.date.fromisoformat)
    runs-on: ubuntu-24.04
    env:
      RAPIDS_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Check if nightly CI is passing
        uses: rapidsai/shared-actions/check_nightly_success/dispatch@main
        with:
          repo: cuspatial
  changed-files:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/changed-files.yaml@cuda-12.8.0
    with:
      files_yaml: |
        test_cpp:
          - '**'
          - '!.devcontainer/**'
          - '!.pre-commit-config.yaml'
          - '!CONTRIBUTING.md'
          - '!README.md'
          - '!docs/**'
          - '!java/**'
          - '!notebooks/**'
          - '!python/**'
        test_notebooks:
          - '**'
          - '!.devcontainer/**'
          - '!.pre-commit-config.yaml'
          - '!CONTRIBUTING.md'
          - '!README.md'
        test_python:
          - '**'
          - '!.devcontainer/**'
          - '!.pre-commit-config.yaml'
          - '!CONTRIBUTING.md'
          - '!README.md'
          - '!docs/**'
          - '!java/**'
          - '!notebooks/**'
  checks:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/checks.yaml@cuda-12.8.0
    with:
      enable_check_generated_files: false
  conda-cpp-build:
    needs: checks
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-build.yaml@cuda-12.8.0
    with:
      build_type: pull-request
  conda-cpp-checks:
    needs: conda-cpp-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-post-build-checks.yaml@cuda-12.8.0
    with:
      build_type: pull-request
      enable_check_symbols: true
  conda-cpp-tests:
    needs: [conda-cpp-build, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-cpp-tests.yaml@cuda-12.8.0
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_cpp
    with:
      build_type: pull-request
  conda-python-build:
    needs: conda-cpp-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-build.yaml@cuda-12.8.0
    with:
      build_type: pull-request
  conda-python-tests:
    needs: [conda-python-build, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-tests.yaml@cuda-12.8.0
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_cpp
    with:
      build_type: pull-request
  conda-notebook-tests:
    needs: [conda-python-build, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@cuda-12.8.0
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_notebooks
    with:
      build_type: pull-request
      node_type: "gpu-v100-latest-1"
      arch: "amd64"
      container_image: "rapidsai/ci-conda:latest"
      run_script: "ci/test_notebooks.sh"
  docs-build:
    needs: conda-python-build
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/custom-job.yaml@cuda-12.8.0
    with:
      build_type: pull-request
      node_type: "gpu-v100-latest-1"
      arch: "amd64"
      container_image: "rapidsai/ci-conda:latest"
      run_script: "ci/build_docs.sh"
  wheel-build-libcuspatial:
    needs: checks
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@cuda-12.8.0
    with:
      # build for every combination of arch and CUDA version, but only for the latest Python
      matrix_filter: group_by([.ARCH, (.CUDA_VER|split(".")|map(tonumber)|.[0])]) | map(max_by(.PY_VER|split(".")|map(tonumber)))
      build_type: pull-request
      script: ci/build_wheel_libcuspatial.sh
  wheel-build-cuspatial:
    needs: [checks, wheel-build-libcuspatial]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@cuda-12.8.0
    with:
      build_type: pull-request
      script: ci/build_wheel_cuspatial.sh
  wheel-tests-cuspatial:
    needs: [wheel-build-cuspatial, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@cuda-12.8.0
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_python
    with:
      build_type: pull-request
      script: ci/test_wheel_cuspatial.sh
  wheel-build-cuproj:
    needs: checks
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@cuda-12.8.0
    with:
      build_type: pull-request
      script: ci/build_wheel_cuproj.sh
  wheel-tests-cuproj:
    needs: [wheel-build-cuspatial, wheel-build-cuproj, changed-files]
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@cuda-12.8.0
    if: fromJSON(needs.changed-files.outputs.changed_file_groups).test_python
    with:
      build_type: pull-request
      script: ci/test_wheel_cuproj.sh
  devcontainer:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/build-in-devcontainer.yaml@cuda-12.8.0
    with:
      arch: '["amd64"]'
      cuda: '["12.8"]'
      build_command: |
        sccache -z;
        build-all -DBUILD_TESTS=ON -DBUILD_BENCHMARKS=ON --verbose;
        sccache -s;
